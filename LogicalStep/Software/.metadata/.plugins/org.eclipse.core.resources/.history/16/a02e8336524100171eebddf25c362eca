/*
 * "Hello World" example.
 *
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */

#include <stdio.h>
#include "system.h"
#include "altera_avalon_pio_regs.h"
#include "sys/alt_irq.h"

/*
static void stimulus_ISR(void* context, alt_u32 id)
{
	// do things
	// code

	// make sure to clear the interrupt
	IOWR(BUTTON_PIO_BASE, 3, 0x0);
}*/

volatile int flag;

static void button_ISR(void* context, alt_u32 id)
{
	// do things
	// code
	buttons = IORD(BUTTON_PIO_BASE, 0);

	// make sure to clear the interrupt
	IOWR(BUTTON_PIO_BASE, 3, 0x0);
}

int main()
{
	// Initializing EGM: period, pulse width, enable
	//IOWR( EGM_BASE, 2, 0xF);
	//IOWR( EGM_BASE, 3, 0x8);
	//IOWR( EGM_BASE, 0, 1)

	// Initializing IRQ
	alt_irq_register( BUTTON_PIO_IRQ, (void *)0, button_ISR );

	// prelab: buttons controlling LEDs
	buttons = IORD(BUTTON_PIO_BASE, 0);

	while(1){
		IOWR(LED_PIO_BASE,0, ~buttons&0x0F);
	}


  return 0;
}

int background()
{
	int j;
	int x = 0;
	int grainsize = 4;
	int g_taskProcessed = 0;
	for(j = 0; j < grainsize; j++)
	{
		g_taskProcessed++;
	}
	return x;
}
